{
  "description": "DataplaneV2Encryption describes the specification to be used for node-to-node encryption.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "networking.gke.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "DataplaneV2Encryption"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "Spec is the desired configuration for node-to-node encryption.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "type",
        "enabled"
      ],
      "properties": {
        "enabled": {
          "description": "Enable node-to-node encryption.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of encryption to be used.",
          "type": "string",
          "minLength": 1,
          "enum": [
            "Wireguard"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "networking.gke.io",
      "kind": "DataplaneV2Encryption",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}