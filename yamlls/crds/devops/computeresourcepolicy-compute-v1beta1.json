{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "compute.cnrm.cloud.google.com/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ComputeResourcePolicy"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "region"
      ],
      "properties": {
        "description": {
          "description": "Immutable. An optional description of this resource. Provide this property when you create the resource.",
          "type": [
            "string",
            "null"
          ]
        },
        "groupPlacementPolicy": {
          "description": "Immutable. Resource policy for instances used for placement configuration.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "availabilityDomainCount": {
              "description": "Immutable. The number of availability domains instances will be spread across. If two instances are in different\navailability domain, they will not be put in the same low latency network.",
              "type": [
                "integer",
                "null"
              ]
            },
            "collocation": {
              "description": "Immutable. Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.\nSpecify 'COLLOCATED' to enable collocation. Can only be specified with 'vm_count'. If compute instances are created\nwith a COLLOCATED policy, then exactly 'vm_count' instances must be created at the same time with the resource policy\nattached. Possible values: [\"COLLOCATED\"].",
              "type": [
                "string",
                "null"
              ]
            },
            "vmCount": {
              "description": "Immutable. Number of VMs in this placement group. Google does not recommend that you use this field\nunless you use a compact policy and you want your policy to work only if it contains this\nexact number of VMs.",
              "type": [
                "integer",
                "null"
              ]
            }
          }
        },
        "instanceSchedulePolicy": {
          "description": "Immutable. Resource policy for scheduling instance operations.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "timeZone"
          ],
          "properties": {
            "expirationTime": {
              "description": "Immutable. The expiration time of the schedule. The timestamp is an RFC3339 string.",
              "type": [
                "string",
                "null"
              ]
            },
            "startTime": {
              "description": "Immutable. The start time of the schedule. The timestamp is an RFC3339 string.",
              "type": [
                "string",
                "null"
              ]
            },
            "timeZone": {
              "description": "Immutable. Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name\nfrom the tz database: http://en.wikipedia.org/wiki/Tz_database.",
              "type": "string"
            },
            "vmStartSchedule": {
              "description": "Immutable. Specifies the schedule for starting instances.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "schedule"
              ],
              "properties": {
                "schedule": {
                  "description": "Immutable. Specifies the frequency for the operation, using the unix-cron format.",
                  "type": "string"
                }
              }
            },
            "vmStopSchedule": {
              "description": "Immutable. Specifies the schedule for stopping instances.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "schedule"
              ],
              "properties": {
                "schedule": {
                  "description": "Immutable. Specifies the frequency for the operation, using the unix-cron format.",
                  "type": "string"
                }
              }
            }
          }
        },
        "region": {
          "description": "Immutable. Region where resource policy resides.",
          "type": "string"
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": [
            "string",
            "null"
          ]
        },
        "snapshotSchedulePolicy": {
          "description": "Immutable. Policy for creating snapshots of persistent disks.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "schedule"
          ],
          "properties": {
            "retentionPolicy": {
              "description": "Immutable. Retention policy applied to snapshots created by this resource policy.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "maxRetentionDays"
              ],
              "properties": {
                "maxRetentionDays": {
                  "description": "Immutable. Maximum age of the snapshot that is allowed to be kept.",
                  "type": "integer"
                },
                "onSourceDiskDelete": {
                  "description": "Immutable. Specifies the behavior to apply to scheduled snapshots when\nthe source disk is deleted. Default value: \"KEEP_AUTO_SNAPSHOTS\" Possible values: [\"KEEP_AUTO_SNAPSHOTS\", \"APPLY_RETENTION_POLICY\"].",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "schedule": {
              "description": "Immutable. Contains one of an 'hourlySchedule', 'dailySchedule', or 'weeklySchedule'.",
              "type": "object",
              "properties": {
                "dailySchedule": {
                  "description": "Immutable. The policy will execute every nth day at the specified time.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "daysInCycle",
                    "startTime"
                  ],
                  "properties": {
                    "daysInCycle": {
                      "description": "Immutable. The number of days between snapshots.",
                      "type": "integer"
                    },
                    "startTime": {
                      "description": "Immutable. This must be in UTC format that resolves to one of\n00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example,\nboth 13:00-5 and 08:00 are valid.",
                      "type": "string"
                    }
                  }
                },
                "hourlySchedule": {
                  "description": "Immutable. The policy will execute every nth hour starting at the specified time.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "hoursInCycle",
                    "startTime"
                  ],
                  "properties": {
                    "hoursInCycle": {
                      "description": "Immutable. The number of hours between snapshots.",
                      "type": "integer"
                    },
                    "startTime": {
                      "description": "Immutable. Time within the window to start the operations.\nIt must be in an hourly format \"HH:MM\",\nwhere HH : [00-23] and MM : [00] GMT.\neg: 21:00.",
                      "type": "string"
                    }
                  }
                },
                "weeklySchedule": {
                  "description": "Immutable. Allows specifying a snapshot time for each day of the week.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "dayOfWeeks"
                  ],
                  "properties": {
                    "dayOfWeeks": {
                      "description": "Immutable. May contain up to seven (one for each day of the week) snapshot times.",
                      "type": "array",
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "day",
                          "startTime"
                        ],
                        "properties": {
                          "day": {
                            "description": "Immutable. The day of the week to create the snapshot. e.g. MONDAY Possible values: [\"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\", \"SUNDAY\"].",
                            "type": "string"
                          },
                          "startTime": {
                            "description": "Immutable. Time within the window to start the operations.\nIt must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "snapshotProperties": {
              "description": "Immutable. Properties with which the snapshots are created, such as labels.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "guestFlush": {
                  "description": "Immutable. Whether to perform a 'guest aware' snapshot.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "labels": {
                  "description": "Immutable. A set of key-value pairs.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "storageLocations": {
                  "description": "Immutable. Cloud Storage bucket location to store the auto snapshot\n(regional or multi-regional).",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": [
            "integer",
            "null"
          ]
        },
        "selfLink": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "compute.cnrm.cloud.google.com",
      "kind": "ComputeResourcePolicy",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}