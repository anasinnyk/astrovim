{
  "description": "LogsInstance controls an individual logs instance within a Grafana Agent deployment.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "monitoring.grafana.com/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "LogsInstance"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "Spec holds the specification of the desired behavior for the logs instance.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "additionalScrapeConfigs": {
          "description": "AdditionalScrapeConfigs allows specifying a key of a Secret containing additional Grafana Agent logging scrape configurations. Scrape configurations specified are appended to the configurations generated by the Grafana Agent Operator. \n Job configurations specified must have the form as specified in the official Promtail documentation: \n https://grafana.com/docs/loki/latest/clients/promtail/configuration/#scrape_configs \n As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Grafana Agent. It is advised to review both Grafana Agent and Promtail release notes to ensure that no incompatible scrape configs are going to break Grafana Agent after the upgrade.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "description": "The key of the secret to select from.  Must be a valid secret key.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            },
            "optional": {
              "description": "Specify whether the Secret or its key must be defined",
              "type": [
                "boolean",
                "null"
              ]
            }
          }
        },
        "clients": {
          "description": "Clients controls where logs are written to for this instance.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "LogsClientSpec defines the client integration for logs, indicating which Loki server to send logs to.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "url"
            ],
            "properties": {
              "backoffConfig": {
                "description": "Configures how to retry requests to Loki when a request fails. Defaults to a minPeriod of 500ms, maxPeriod of 5m, and maxRetries of 10.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "maxPeriod": {
                    "description": "Maximum backoff time between retries.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "maxRetries": {
                    "description": "Maximum number of retries to perform before giving up a request.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "minPeriod": {
                    "description": "Initial backoff time between retries. Time between retries is increased exponentially.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "basicAuth": {
                "description": "BasicAuth for the Loki server.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "password": {
                    "description": "The secret in the service monitor namespace that contains the password for authentication.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    }
                  },
                  "username": {
                    "description": "The secret in the service monitor namespace that contains the username for authentication.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "batchSize": {
                "description": "Maximum batch size (in bytes) of logs to accumulate before sending the batch to Loki.",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "batchWait": {
                "description": "Maximum amount of time to wait before sending a batch, even if that batch isn't full.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "bearerToken": {
                "description": "BearerToken used for remote_write.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "bearerTokenFile": {
                "description": "BearerTokenFile used to read bearer token.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "externalLabels": {
                "description": "ExternalLabels are labels to add to any time series when sending data to Loki.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "proxyUrl": {
                "description": "ProxyURL to proxy requests through. Optional.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tenantId": {
                "description": "Tenant ID used by default to push logs to Loki. If omitted assumes remote Loki is running in single-tenant mode or an authentication layer is used to inject an X-Scope-OrgID header.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "timeout": {
                "description": "Maximum time to wait for a server to respond to a request.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tlsConfig": {
                "description": "TLSConfig to use for the client. Only used when the protocol of the URL is https.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "ca": {
                    "description": "Struct containing the CA cert to use for the targets.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        }
                      },
                      "secret": {
                        "description": "Secret containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "caFile": {
                    "description": "Path to the CA cert in the Prometheus container to use for the targets.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "cert": {
                    "description": "Struct containing the client cert file for the targets.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        }
                      },
                      "secret": {
                        "description": "Secret containing data to use for the targets.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "certFile": {
                    "description": "Path to the client cert file in the Prometheus container for the targets.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "insecureSkipVerify": {
                    "description": "Disable target certificate validation.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "keyFile": {
                    "description": "Path to the client key file in the Prometheus container for the targets.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "keySecret": {
                    "description": "Secret containing the client key file for the targets.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    }
                  },
                  "serverName": {
                    "description": "Used to verify the hostname for the targets.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "url": {
                "description": "URL is the URL where Loki is listening. Must be a full HTTP URL, including protocol. Required. Example: https://logs-prod-us-central1.grafana.net/loki/api/v1/push.",
                "type": "string"
              }
            }
          }
        },
        "podLogsNamespaceSelector": {
          "description": "Set of labels to determine which namespaces should be watched for PodLogs. If not provided, checks only namespace of the instance.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "podLogsSelector": {
          "description": "Determines which PodLogs should be selected for including in this instance.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "targetConfig": {
          "description": "Configures how tailed targets are watched.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "syncPeriod": {
              "description": "Period to resync directories being watched and files being tailed to discover new ones or stop watching removed ones.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "monitoring.grafana.com",
      "kind": "LogsInstance",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}