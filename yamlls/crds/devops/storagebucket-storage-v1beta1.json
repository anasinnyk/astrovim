{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "storage.cnrm.cloud.google.com/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "StorageBucket"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "bucketPolicyOnly": {
          "description": "DEPRECATED. Please use the `uniformBucketLevelAccess` field as this field has been renamed by Google. The `uniformBucketLevelAccess` field will supersede this field.\nEnables Bucket PolicyOnly access to a bucket.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "cors": {
          "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "maxAgeSeconds": {
                "description": "The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "method": {
                "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\".",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "origin": {
                "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "responseHeader": {
                "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "defaultEventBasedHold": {
          "description": "Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "encryption": {
          "description": "The bucket's encryption configuration.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "kmsKeyRef"
          ],
          "properties": {
            "kmsKeyRef": {
              "type": "object",
              "properties": {
                "external": {
                  "description": "Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "lifecycleRule": {
          "description": "The bucket's Lifecycle Rules configuration.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "action",
              "condition"
            ],
            "properties": {
              "action": {
                "description": "The Lifecycle Rule's action configuration. A single block of this type is supported.",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "storageClass": {
                    "description": "The target Storage Class of objects affected by this Lifecycle Rule. Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "type": {
                    "description": "The type of the action of this Lifecycle Rule. Supported values include: Delete and SetStorageClass.",
                    "type": "string"
                  }
                }
              },
              "condition": {
                "description": "The Lifecycle Rule's condition configuration.",
                "type": "object",
                "properties": {
                  "age": {
                    "description": "Minimum age of an object in days to satisfy this condition.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "createdBefore": {
                    "description": "Creation date of an object in RFC 3339 (e.g. 2017-06-13) to satisfy this condition.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "customTimeBefore": {
                    "description": "Creation date of an object in RFC 3339 (e.g. 2017-06-13) to satisfy this condition.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "daysSinceCustomTime": {
                    "description": "Number of days elapsed since the user-specified timestamp set on an object.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "daysSinceNoncurrentTime": {
                    "description": "Number of days elapsed since the noncurrent timestamp of an object. This\n\t\t\t\t\t\t\t\t\t\tcondition is relevant only for versioned objects.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "matchesStorageClass": {
                    "description": "Storage Class of objects to satisfy this condition. Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, DURABLE_REDUCED_AVAILABILITY.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "noncurrentTimeBefore": {
                    "description": "Creation date of an object in RFC 3339 (e.g. 2017-06-13) to satisfy this condition.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "numNewerVersions": {
                    "description": "Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "withState": {
                    "description": "Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: \"LIVE\", \"ARCHIVED\", \"ANY\".",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "location": {
          "description": "Immutable. The Google Cloud Storage location.",
          "type": [
            "string",
            "null"
          ]
        },
        "logging": {
          "description": "The bucket's Access & Storage Logs configuration.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "logBucket"
          ],
          "properties": {
            "logBucket": {
              "description": "The bucket that will receive log objects.",
              "type": "string"
            },
            "logObjectPrefix": {
              "description": "The object prefix for log objects. If it's not provided, by default Google Cloud Storage sets this to this bucket's name.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "publicAccessPrevention": {
          "description": "Prevents public access to a bucket.",
          "type": [
            "string",
            "null"
          ]
        },
        "requesterPays": {
          "description": "Enables Requester Pays on a storage bucket.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": [
            "string",
            "null"
          ]
        },
        "retentionPolicy": {
          "description": "Configuration of the bucket's data retention policy for how long objects in the bucket should be retained.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "retentionPeriod"
          ],
          "properties": {
            "isLocked": {
              "description": "If set to true, the bucket will be locked and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "retentionPeriod": {
              "description": "The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.",
              "type": "integer"
            }
          }
        },
        "storageClass": {
          "description": "The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.",
          "type": [
            "string",
            "null"
          ]
        },
        "uniformBucketLevelAccess": {
          "description": "Enables uniform bucket-level access on a bucket.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "versioning": {
          "description": "The bucket's Versioning configuration.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "enabled"
          ],
          "properties": {
            "enabled": {
              "description": "While set to true, versioning is fully enabled for this bucket.",
              "type": "boolean"
            }
          }
        },
        "website": {
          "description": "Configuration if the bucket acts as a website.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "mainPageSuffix": {
              "description": "Behaves as the bucket's directory index where missing objects are treated as potential directories.",
              "type": [
                "string",
                "null"
              ]
            },
            "notFoundPage": {
              "description": "The custom object to return when a requested resource is not found.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      }
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": [
            "integer",
            "null"
          ]
        },
        "selfLink": {
          "description": "The URI of the created resource.",
          "type": [
            "string",
            "null"
          ]
        },
        "url": {
          "description": "The base URL of the bucket, in the format gs://<bucket-name>.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "storage.cnrm.cloud.google.com",
      "kind": "StorageBucket",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}