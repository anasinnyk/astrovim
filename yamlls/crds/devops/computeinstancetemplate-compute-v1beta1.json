{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "compute.cnrm.cloud.google.com/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ComputeInstanceTemplate"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "disk",
        "machineType"
      ],
      "properties": {
        "advancedMachineFeatures": {
          "description": "Immutable. Controls for advanced machine-related behavior features.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "enableNestedVirtualization": {
              "description": "Immutable. Whether to enable nested virtualization or not.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "threadsPerCore": {
              "description": "Immutable. The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.",
              "type": [
                "integer",
                "null"
              ]
            }
          }
        },
        "canIpForward": {
          "description": "Immutable. Whether to allow sending and receiving of packets with non-matching source or destination IPs. This defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "confidentialInstanceConfig": {
          "description": "Immutable. The Confidential VM config being used by the instance. on_host_maintenance has to be set to TERMINATE or this will fail to create.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "enableConfidentialCompute"
          ],
          "properties": {
            "enableConfidentialCompute": {
              "description": "Immutable. Defines whether the instance should have confidential compute enabled.",
              "type": "boolean"
            }
          }
        },
        "description": {
          "description": "Immutable. A brief description of this resource.",
          "type": [
            "string",
            "null"
          ]
        },
        "disk": {
          "description": "Immutable. Disks to attach to instances created from this template. This can be specified multiple times for multiple disks.",
          "type": "array",
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "autoDelete": {
                "description": "Immutable. Whether or not the disk should be auto-deleted. This defaults to true.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "boot": {
                "description": "Immutable. Indicates that this is a boot disk.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "deviceName": {
                "description": "Immutable. A unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance. If not specified, the server chooses a default device name to apply to this disk.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "diskEncryptionKey": {
                "description": "Immutable. Encrypts or decrypts a disk using a customer-supplied encryption key.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "kmsKeyRef"
                ],
                "properties": {
                  "kmsKeyRef": {
                    "type": "object",
                    "properties": {
                      "external": {
                        "description": "Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "namespace": {
                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "diskName": {
                "description": "Immutable. Name of the disk. When not provided, this defaults to the name of the instance.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "diskSizeGb": {
                "description": "Immutable. The size of the image in gigabytes. If not specified, it will inherit the size of its base image. For SCRATCH disks, the size must be exactly 375GB.",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "diskType": {
                "description": "Immutable. The Google Compute Engine disk type. Such as \"pd-ssd\", \"local-ssd\", \"pd-balanced\" or \"pd-standard\".",
                "type": [
                  "string",
                  "null"
                ]
              },
              "interface": {
                "description": "Immutable. Specifies the disk interface to use for attaching this disk.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "labels": {
                "description": "Immutable. A set of key/value label pairs to assign to disks,.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "mode": {
                "description": "Immutable. The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If you are attaching or creating a boot disk, this must read-write mode.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "resourcePolicies": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "external": {
                      "description": "Allowed value: The `selfLink` field of a `ComputeResourcePolicy` resource.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "namespace": {
                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              },
              "sourceDiskRef": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "external": {
                    "description": "Allowed value: The `name` field of a `ComputeDisk` resource.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "sourceImageRef": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "external": {
                    "description": "Allowed value: The `selfLink` field of a `ComputeImage` resource.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "type": {
                "description": "Immutable. The type of Google Compute Engine disk, can be either \"SCRATCH\" or \"PERSISTENT\".",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "enableDisplay": {
          "description": "Immutable. Enable Virtual Displays on this instance. Note: allow_stopping_for_update must be set to true in order to update this field.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "guestAccelerator": {
          "description": "Immutable. List of the type and count of accelerator cards attached to the instance.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "count",
              "type"
            ],
            "properties": {
              "count": {
                "description": "Immutable. The number of the guest accelerator cards exposed to this instance.",
                "type": "integer"
              },
              "type": {
                "description": "Immutable. The accelerator type resource to expose to this instance. E.g. nvidia-tesla-k80.",
                "type": "string"
              }
            }
          }
        },
        "instanceDescription": {
          "description": "Immutable. A description of the instance.",
          "type": [
            "string",
            "null"
          ]
        },
        "machineType": {
          "description": "Immutable. The machine type to create. To create a machine with a custom type (such as extended memory), format the value like custom-VCPUS-MEM_IN_MB like custom-6-20480 for 6 vCPU and 20GB of RAM.",
          "type": "string"
        },
        "metadata": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "key",
              "value"
            ],
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "metadataStartupScript": {
          "description": "Immutable. An alternative to using the startup-script metadata key, mostly to match the compute_instance resource. This replaces the startup-script metadata key on the created instance and thus the two mechanisms are not allowed to be used simultaneously.",
          "type": [
            "string",
            "null"
          ]
        },
        "minCpuPlatform": {
          "description": "Immutable. Specifies a minimum CPU platform. Applicable values are the friendly names of CPU platforms, such as Intel Haswell or Intel Skylake.",
          "type": [
            "string",
            "null"
          ]
        },
        "namePrefix": {
          "description": "Immutable. Creates a unique name beginning with the specified prefix. Conflicts with name.",
          "type": [
            "string",
            "null"
          ]
        },
        "networkInterface": {
          "description": "Immutable. Networks to attach to instances created from this template. This can be specified multiple times for multiple networks.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "accessConfig": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "natIpRef": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "external": {
                          "description": "Allowed value: The `address` field of a `ComputeAddress` resource.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "networkTier": {
                      "description": "Immutable. The networking tier used for configuring this instance template. This field can take the following values: PREMIUM, STANDARD, FIXED_STANDARD. If this field is not specified, it is assumed to be PREMIUM.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "publicPtrDomainName": {
                      "description": "The DNS domain name for the public PTR record.The DNS domain name for the public PTR record.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              },
              "aliasIpRange": {
                "description": "Immutable. An array of alias IP ranges for this network interface. Can only be specified for network interfaces on subnet-mode networks.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "ipCidrRange"
                  ],
                  "properties": {
                    "ipCidrRange": {
                      "description": "Immutable. The IP CIDR range represented by this alias IP range. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. At the time of writing only a netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API error.",
                      "type": "string"
                    },
                    "subnetworkRangeName": {
                      "description": "Immutable. The subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left unspecified, the primary range of the subnetwork will be used.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              },
              "ipv6AccessConfig": {
                "description": "An array of IPv6 access configurations for this interface. Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig specified, then this instance will have no external IPv6 Internet access.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "networkTier"
                  ],
                  "properties": {
                    "externalIpv6": {
                      "description": "The first IPv6 address of the external IPv6 range associated with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig. The field is output only, an IPv6 address from a subnetwork associated with the instance will be allocated dynamically.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "externalIpv6PrefixLength": {
                      "description": "The prefix length of the external IPv6 range.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "networkTier": {
                      "description": "The service-level to be provided for IPv6 traffic when the subnet has an external subnet. Only PREMIUM tier is valid for IPv6.",
                      "type": "string"
                    },
                    "publicPtrDomainName": {
                      "description": "The domain name to be used when creating DNSv6 records for the external IPv6 ranges.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              },
              "ipv6AccessType": {
                "description": "One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "description": "The name of the network_interface.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "networkIp": {
                "description": "Immutable. The private IP address to assign to the instance. If empty, the address will be automatically assigned.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "networkRef": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "external": {
                    "description": "Allowed value: The `selfLink` field of a `ComputeNetwork` resource.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "nicType": {
                "description": "Immutable. The type of vNIC to be used on this interface. Possible values:GVNIC, VIRTIO_NET.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "queueCount": {
                "description": "Immutable. The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "stackType": {
                "description": "The stack type for this network interface to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "subnetworkProject": {
                "description": "Immutable. The ID of the project in which the subnetwork belongs. If it is not provided, the provider project is used.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "subnetworkRef": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "external": {
                    "description": "Allowed value: The `selfLink` field of a `ComputeSubnetwork` resource.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "networkPerformanceConfig": {
          "description": "Immutable. Configures network performance settings for the instance. If not specified, the instance will be created with its default network performance configuration.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "totalEgressBandwidthTier"
          ],
          "properties": {
            "totalEgressBandwidthTier": {
              "description": "Immutable. The egress bandwidth tier to enable. Possible values:TIER_1, DEFAULT.",
              "type": "string"
            }
          }
        },
        "region": {
          "description": "Immutable. An instance template is a global resource that is not bound to a zone or a region. However, you can still specify some regional resources in an instance template, which restricts the template to the region where that resource resides. For example, a custom subnetwork resource is tied to a specific region. Defaults to the region of the Provider if no value is given.",
          "type": [
            "string",
            "null"
          ]
        },
        "reservationAffinity": {
          "description": "Immutable. Specifies the reservations that this instance can consume from.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "type"
          ],
          "properties": {
            "specificReservation": {
              "description": "Immutable. Specifies the label selector for the reservation to use.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "key",
                "values"
              ],
              "properties": {
                "key": {
                  "description": "Immutable. Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.",
                  "type": "string"
                },
                "values": {
                  "description": "Immutable. Corresponds to the label values of a reservation resource.",
                  "type": "array",
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "type": {
              "description": "Immutable. The type of reservation from which this instance can consume resources.",
              "type": "string"
            }
          }
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": [
            "string",
            "null"
          ]
        },
        "scheduling": {
          "description": "Immutable. The scheduling strategy to use.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "automaticRestart": {
              "description": "Immutable. Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). This defaults to true.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "minNodeCpus": {
              "description": "Minimum number of cpus for the instance.",
              "type": [
                "integer",
                "null"
              ]
            },
            "nodeAffinities": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "value": {
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                }
              }
            },
            "onHostMaintenance": {
              "description": "Immutable. Defines the maintenance behavior for this instance.",
              "type": [
                "string",
                "null"
              ]
            },
            "preemptible": {
              "description": "Immutable. Allows instance to be preempted. This defaults to false.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "provisioningModel": {
              "description": "Immutable. Whether the instance is spot. If this is set as SPOT.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "serviceAccount": {
          "description": "Immutable. Service account to attach to the instance.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "scopes"
          ],
          "properties": {
            "scopes": {
              "description": "Immutable. A list of service scopes. Both OAuth2 URLs and gcloud short names are supported. To allow full access to all Cloud APIs, use the cloud-platform scope.",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "serviceAccountRef": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "external": {
                  "description": "Allowed value: The `email` field of an `IAMServiceAccount` resource.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "shieldedInstanceConfig": {
          "description": "Immutable. Enable Shielded VM on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Note: shielded_instance_config can only be used with boot images with shielded vm support.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "enableIntegrityMonitoring": {
              "description": "Immutable. Compare the most recent boot measurements to the integrity policy baseline and return a pair of pass/fail results depending on whether they match or not. Defaults to true.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "enableSecureBoot": {
              "description": "Immutable. Verify the digital signature of all boot components, and halt the boot process if signature verification fails. Defaults to false.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "enableVtpm": {
              "description": "Immutable. Use a virtualized trusted platform module, which is a specialized computer chip you can use to encrypt objects like keys and certificates. Defaults to true.",
              "type": [
                "boolean",
                "null"
              ]
            }
          }
        },
        "tags": {
          "description": "Immutable. Tags to attach to the instance.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      }
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "metadataFingerprint": {
          "description": "The unique fingerprint of the metadata.",
          "type": [
            "string",
            "null"
          ]
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": [
            "integer",
            "null"
          ]
        },
        "selfLink": {
          "description": "The URI of the created resource.",
          "type": [
            "string",
            "null"
          ]
        },
        "tagsFingerprint": {
          "description": "The unique fingerprint of the tags.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "compute.cnrm.cloud.google.com",
      "kind": "ComputeInstanceTemplate",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}