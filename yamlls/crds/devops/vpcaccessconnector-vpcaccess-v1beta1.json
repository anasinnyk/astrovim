{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "vpcaccess.cnrm.cloud.google.com/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "VPCAccessConnector"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "location",
        "projectRef"
      ],
      "properties": {
        "ipCidrRange": {
          "description": "Immutable. The range of internal addresses that follows RFC 4632 notation. Example: `10.132.0.0/28`.",
          "type": [
            "string",
            "null"
          ]
        },
        "location": {
          "description": "Immutable. The location for the resource",
          "type": "string"
        },
        "machineType": {
          "description": "Immutable. Machine type of VM Instance underlying connector. Default is e2-micro",
          "type": [
            "string",
            "null"
          ]
        },
        "maxInstances": {
          "description": "Immutable. Maximum value of instances in autoscaling group underlying the connector.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "maxThroughput": {
          "description": "Immutable. Maximum throughput of the connector in Mbps. Default is 200, max is 1000.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "minInstances": {
          "description": "Immutable. Minimum value of instances in autoscaling group underlying the connector.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "minThroughput": {
          "description": "Immutable. Minimum throughput of the connector in Mbps. Default and min is 200.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "networkRef": {
          "description": "Immutable.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "external": {
              "description": "Name of a VPC network.\n\nAllowed value: The Google Cloud resource name of a `ComputeNetwork` resource (format: `projects/{{project}}/global/networks/{{name}}`).",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "projectRef": {
          "description": "Immutable. The Project that this resource belongs to.",
          "type": "object",
          "properties": {
            "external": {
              "description": "The project for the resource\n\nAllowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": [
            "string",
            "null"
          ]
        },
        "subnet": {
          "description": "Immutable. The subnet in which to house the VPC Access Connector.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "nameRef": {
              "description": "Immutable.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "external": {
                  "description": "Subnet name (relative, not fully qualified). E.g. if the full subnet selfLink is https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetName} the correct input for this field would be: {subnetName}\n\nAllowed value: The Google Cloud resource name of a `ComputeSubnetwork` resource (format: `projects/{{project}}/regions/{{region}}/subnetworks/{{name}}`).",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "projectRef": {
              "description": "Immutable.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "external": {
                  "description": "Project in which the subnet exists. If not set, this project is assumed to be the project for which the connector create request was issued.\n\nAllowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "connectedProjects": {
          "description": "Output only. List of projects using the connector.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": [
            "integer",
            "null"
          ]
        },
        "state": {
          "description": "Output only. State of the VPC access connector. Possible values: STATE_UNSPECIFIED, READY, CREATING, DELETING, ERROR, UPDATING",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "vpcaccess.cnrm.cloud.google.com",
      "kind": "VPCAccessConnector",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}