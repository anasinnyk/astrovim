{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "recaptchaenterprise.cnrm.cloud.google.com/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "RecaptchaEnterpriseKey"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "displayName",
        "projectRef"
      ],
      "properties": {
        "androidSettings": {
          "description": "Settings for keys that can be used by Android apps.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "allowAllPackageNames": {
              "description": "If set to true, it means allowed_package_names will not be enforced.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "allowedPackageNames": {
              "description": "Android package names of apps allowed to use the key. Example: 'com.companyname.appname'",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "displayName": {
          "description": "Human-readable display name of this key. Modifiable by user.",
          "type": "string"
        },
        "iosSettings": {
          "description": "Settings for keys that can be used by iOS apps.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "allowAllBundleIds": {
              "description": "If set to true, it means allowed_bundle_ids will not be enforced.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "allowedBundleIds": {
              "description": "iOS bundle ids of apps allowed to use the key. Example: 'com.companyname.productname.appname'",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "projectRef": {
          "description": "Immutable. The Project that this resource belongs to.",
          "type": "object",
          "properties": {
            "external": {
              "description": "The project for the resource\n\nAllowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "resourceID": {
          "description": "Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.",
          "type": [
            "string",
            "null"
          ]
        },
        "testingOptions": {
          "description": "Immutable. Options for user acceptance testing.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "testingChallenge": {
              "description": "Immutable. For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if UNSOLVABLE_CHALLENGE. Possible values: TESTING_CHALLENGE_UNSPECIFIED, NOCAPTCHA, UNSOLVABLE_CHALLENGE",
              "type": [
                "string",
                "null"
              ]
            },
            "testingScore": {
              "description": "Immutable. All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.",
              "type": [
                "number",
                "null"
              ],
              "format": "double"
            }
          }
        },
        "webSettings": {
          "description": "Settings for keys that can be used by websites.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "integrationType"
          ],
          "properties": {
            "allowAllDomains": {
              "description": "If set to true, it means allowed_domains will not be enforced.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "allowAmpTraffic": {
              "description": "If set to true, the key can be used on AMP (Accelerated Mobile Pages) websites. This is supported only for the SCORE integration type.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "allowedDomains": {
              "description": "Domains or subdomains of websites allowed to use the key. All subdomains of an allowed domain are automatically allowed. A valid domain requires a host and must not include any path, port, query or fragment. Examples: 'example.com' or 'subdomain.example.com'",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "challengeSecurityPreference": {
              "description": "Settings for the frequency and difficulty at which this key triggers captcha challenges. This should only be specified for IntegrationTypes CHECKBOX and INVISIBLE. Possible values: CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED, USABILITY, BALANCE, SECURITY",
              "type": [
                "string",
                "null"
              ]
            },
            "integrationType": {
              "description": "Immutable. Required. Describes how this key is integrated with the website. Possible values: SCORE, CHECKBOX, INVISIBLE",
              "type": "string"
            }
          }
        }
      }
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "createTime": {
          "description": "The timestamp corresponding to the creation of this Key.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": [
            "integer",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "recaptchaenterprise.cnrm.cloud.google.com",
      "kind": "RecaptchaEnterpriseKey",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}