{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "compute.cnrm.cloud.google.com/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ComputePacketMirroring"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "collectorIlb",
        "location",
        "mirroredResources",
        "network",
        "projectRef"
      ],
      "properties": {
        "collectorIlb": {
          "description": "The Forwarding Rule resource of type `loadBalancingScheme=INTERNAL` that will be used as collector for mirrored traffic. The specified forwarding rule must have `isMirroringCollector` set to true.",
          "type": "object",
          "required": [
            "urlRef"
          ],
          "properties": {
            "urlRef": {
              "type": "object",
              "properties": {
                "external": {
                  "description": "Resource URL to the forwarding rule representing the ILB configured as destination of the mirrored traffic.\n\nAllowed value: The `selfLink` field of a `ComputeForwardingRule` resource.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "description": {
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": [
            "string",
            "null"
          ]
        },
        "enable": {
          "description": "Indicates whether or not this packet mirroring takes effect. If set to FALSE, this packet mirroring policy will not be enforced on the network. The default is TRUE.",
          "type": [
            "string",
            "null"
          ]
        },
        "filter": {
          "description": "Filter for mirrored traffic. If unspecified, all traffic is mirrored.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "cidrRanges": {
              "description": "IP CIDR ranges that apply as filter on the source (ingress) or destination (egress) IP in the IP header. Only IPv4 is supported. If no ranges are specified, all traffic that matches the specified IPProtocols is mirrored. If neither cidrRanges nor IPProtocols is specified, all traffic is mirrored.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "direction": {
              "description": "Direction of traffic to mirror, either INGRESS, EGRESS, or BOTH. The default is BOTH.",
              "type": [
                "string",
                "null"
              ]
            },
            "ipProtocols": {
              "description": "Protocols that apply as filter on mirrored traffic. If no protocols are specified, all traffic that matches the specified CIDR ranges is mirrored. If neither cidrRanges nor IPProtocols is specified, all traffic is mirrored.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "location": {
          "description": "Immutable. The location for the resource",
          "type": "string"
        },
        "mirroredResources": {
          "description": "PacketMirroring mirroredResourceInfos. MirroredResourceInfo specifies a set of mirrored VM instances, subnetworks and/or tags for which traffic from/to all VM instances will be mirrored.",
          "type": "object",
          "properties": {
            "instances": {
              "description": "A set of virtual machine instances that are being mirrored. They must live in zones contained in the same region as this packetMirroring. Note that this config will apply only to those network interfaces of the Instances that belong to the network specified in this packetMirroring. You may specify a maximum of 50 Instances.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "canonicalUrl": {
                    "description": "Immutable. Output only. Unique identifier for the instance; defined by the server.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "urlRef": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "external": {
                        "description": "Resource URL to the virtual machine instance which is being mirrored.\n\nAllowed value: The `selfLink` field of a `ComputeInstance` resource.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "namespace": {
                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "subnetworks": {
              "description": "Immutable. A set of subnetworks for which traffic from/to all VM instances will be mirrored. They must live in the same region as this packetMirroring. You may specify a maximum of 5 subnetworks.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "canonicalUrl": {
                    "description": "Immutable. Output only. Unique identifier for the subnetwork; defined by the server.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "urlRef": {
                    "description": "Immutable.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "external": {
                        "description": "Resource URL to the subnetwork for which traffic from/to all VM instances will be mirrored.\n\nAllowed value: The `selfLink` field of a `ComputeSubnetwork` resource.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "namespace": {
                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "tags": {
              "description": "A set of mirrored tags. Traffic from/to all VM instances that have one or more of these tags will be mirrored.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "network": {
          "description": "Immutable. Specifies the mirrored VPC network. Only packets in this network will be mirrored. All mirrored VMs should have a NIC in the given network. All mirrored subnetworks should belong to the given network.",
          "type": "object",
          "required": [
            "urlRef"
          ],
          "properties": {
            "urlRef": {
              "description": "Immutable.",
              "type": "object",
              "properties": {
                "external": {
                  "description": "URL of the network resource.\n\nAllowed value: The `selfLink` field of a `ComputeNetwork` resource.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "priority": {
          "description": "The priority of applying this configuration. Priority is used to break ties in cases where there is more than one matching rule. In the case of two rules that apply for a given Instance, the one with the lowest-numbered priority value wins. Default value is 1000. Valid range is 0 through 65535.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "projectRef": {
          "description": "Immutable. The Project that this resource belongs to.",
          "type": "object",
          "properties": {
            "external": {
              "description": "The project for the resource\n\nAllowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "collectorIlb": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "canonicalUrl": {
              "description": "Output only. Unique identifier for the forwarding rule; defined by the server.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "id": {
          "description": "Output only. The unique identifier for the resource. This identifier is defined by the server.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "network": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "canonicalUrl": {
              "description": "Output only. Unique identifier for the network; defined by the server.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": [
            "integer",
            "null"
          ]
        },
        "region": {
          "description": "URI of the region where the packetMirroring resides.",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Server-defined URL for the resource.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "compute.cnrm.cloud.google.com",
      "kind": "ComputePacketMirroring",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}