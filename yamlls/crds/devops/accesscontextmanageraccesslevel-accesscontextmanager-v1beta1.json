{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "accesscontextmanager.cnrm.cloud.google.com/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "AccessContextManagerAccessLevel"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "accessPolicyRef",
        "title"
      ],
      "properties": {
        "accessPolicyRef": {
          "description": "The AccessContextManagerAccessPolicy this\nAccessContextManagerAccessLevel lives in.",
          "type": "object",
          "properties": {
            "external": {
              "description": "Allowed value: string of the format `accessPolicies/{{value}}`, where {{value}} is the `name` field of an `AccessContextManagerAccessPolicy` resource.",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "basic": {
          "description": "A set of predefined conditions for the access level and a combining function.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "conditions"
          ],
          "properties": {
            "combiningFunction": {
              "description": "How the conditions list should be combined to determine if a request\nis granted this AccessLevel. If AND is used, each Condition in\nconditions must be satisfied for the AccessLevel to be applied. If\nOR is used, at least one Condition in conditions must be satisfied\nfor the AccessLevel to be applied. Default value: \"AND\" Possible values: [\"AND\", \"OR\"].",
              "type": [
                "string",
                "null"
              ]
            },
            "conditions": {
              "description": "A set of requirements for the AccessLevel to be granted.",
              "type": "array",
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "devicePolicy": {
                    "description": "Device specific restrictions, all restrictions must hold for\nthe Condition to be true. If not specified, all devices are\nallowed.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "allowedDeviceManagementLevels": {
                        "description": "A list of allowed device management levels.\nAn empty list allows all management levels. Possible values: [\"MANAGEMENT_UNSPECIFIED\", \"NONE\", \"BASIC\", \"COMPLETE\"].",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "allowedEncryptionStatuses": {
                        "description": "A list of allowed encryptions statuses.\nAn empty list allows all statuses. Possible values: [\"ENCRYPTION_UNSPECIFIED\", \"ENCRYPTION_UNSUPPORTED\", \"UNENCRYPTED\", \"ENCRYPTED\"].",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "osConstraints": {
                        "description": "A list of allowed OS versions.\nAn empty list allows all types and all versions.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "osType"
                          ],
                          "properties": {
                            "minimumVersion": {
                              "description": "The minimum allowed OS version. If not set, any version\nof this OS satisfies the constraint.\nFormat: \"major.minor.patch\" such as \"10.5.301\", \"9.2.1\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "osType": {
                              "description": "The operating system type of the device. Possible values: [\"OS_UNSPECIFIED\", \"DESKTOP_MAC\", \"DESKTOP_WINDOWS\", \"DESKTOP_LINUX\", \"DESKTOP_CHROME_OS\", \"ANDROID\", \"IOS\"].",
                              "type": "string"
                            },
                            "requireVerifiedChromeOs": {
                              "description": "If you specify DESKTOP_CHROME_OS for osType, you can optionally include requireVerifiedChromeOs to require Chrome Verified Access.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          }
                        }
                      },
                      "requireAdminApproval": {
                        "description": "Whether the device needs to be approved by the customer admin.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "requireCorpOwned": {
                        "description": "Whether the device needs to be corp owned.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "requireScreenLock": {
                        "description": "Whether or not screenlock is required for the DevicePolicy\nto be true. Defaults to false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    }
                  },
                  "ipSubnetworks": {
                    "description": "A list of CIDR block IP subnetwork specification. May be IPv4\nor IPv6.\nNote that for a CIDR IP address block, the specified IP address\nportion must be properly truncated (i.e. all the host bits must\nbe zero) or the input is considered malformed. For example,\n\"192.0.2.0/24\" is accepted but \"192.0.2.1/24\" is not. Similarly,\nfor IPv6, \"2001:db8::/32\" is accepted whereas \"2001:db8::1/32\"\nis not. The originating IP of a request must be in one of the\nlisted subnets in order for this Condition to be true.\nIf empty, all IP addresses are allowed.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "members": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "An allowed list of members (users, service accounts).\nUsing groups is not supported.\n\nThe signed-in user originating the request must be a part of one\nof the provided members. If not specified, a request may come\nfrom any user (logged in/not logged in, not present in any\ngroups, etc.).",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "serviceAccountRef": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "external": {
                              "description": "Allowed value: string of the format `serviceAccount:{{value}}`, where {{value}} is the `email` field of an `IAMServiceAccount` resource.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "user": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  },
                  "negate": {
                    "description": "Whether to negate the Condition. If true, the Condition becomes\na NAND over its non-empty fields, each field must be false for\nthe Condition overall to be satisfied. Defaults to false.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "regions": {
                    "description": "The request must originate from one of the provided\ncountries/regions.\nFormat: A valid ISO 3166-1 alpha-2 code.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "requiredAccessLevels": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "A list of other access levels defined in the same policy.\nReferencing an AccessContextManagerAccessLevel which does not exist\nis an error. All access levels listed must be granted for the\ncondition to be true.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "external": {
                          "description": "Allowed value: The `name` field of an `AccessContextManagerAccessLevel` resource.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "custom": {
          "description": "Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request. \nSee CEL spec at: https://github.com/google/cel-spec.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "expr"
          ],
          "properties": {
            "expr": {
              "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.\nThis page details the objects and attributes that are used to the build the CEL expressions for \ncustom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.",
              "type": "object",
              "required": [
                "expression"
              ],
              "properties": {
                "description": {
                  "description": "Description of the expression.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "expression": {
                  "description": "Textual representation of an expression in Common Expression Language syntax.",
                  "type": "string"
                },
                "location": {
                  "description": "String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "title": {
                  "description": "Title for the expression, i.e. a short string describing its purpose.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "description": {
          "description": "Description of the AccessLevel and its use. Does not affect behavior.",
          "type": [
            "string",
            "null"
          ]
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": [
            "string",
            "null"
          ]
        },
        "title": {
          "description": "Human readable title. Must be unique within the Policy.",
          "type": "string"
        }
      }
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": [
            "integer",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "accesscontextmanager.cnrm.cloud.google.com",
      "kind": "AccessContextManagerAccessLevel",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}