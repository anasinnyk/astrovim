{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "run.cnrm.cloud.google.com/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "RunService"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "required": [
        "location",
        "projectRef",
        "template"
      ],
      "properties": {
        "annotations": {
          "description": "Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using 'run.googleapis.com' or 'serving.knative.dev' namespaces. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "binaryAuthorization": {
          "description": "Settings for the Binary Authorization feature.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "breakglassJustification": {
              "description": "If present, indicates to use Breakglass using this justification. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass",
              "type": [
                "string",
                "null"
              ]
            },
            "useDefault": {
              "description": "If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled",
              "type": [
                "boolean",
                "null"
              ]
            }
          }
        },
        "client": {
          "description": "Arbitrary identifier for the API client.",
          "type": [
            "string",
            "null"
          ]
        },
        "clientVersion": {
          "description": "Arbitrary version identifier for the API client.",
          "type": [
            "string",
            "null"
          ]
        },
        "description": {
          "description": "User-provided description of the Service.",
          "type": [
            "string",
            "null"
          ]
        },
        "ingress": {
          "description": "Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.",
          "type": [
            "string",
            "null"
          ]
        },
        "launchStage": {
          "description": "The launch stage as defined by [Google Cloud Platform Launch Stages](http://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed. Possible values: LAUNCH_STAGE_UNSPECIFIED, UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED",
          "type": [
            "string",
            "null"
          ]
        },
        "location": {
          "description": "Immutable. The location for the resource",
          "type": "string"
        },
        "projectRef": {
          "description": "Immutable. The Project that this resource belongs to.",
          "type": "object",
          "properties": {
            "external": {
              "description": "The project for the resource\n\nAllowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": [
                "string",
                "null"
              ]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": [
            "string",
            "null"
          ]
        },
        "template": {
          "description": "Required. The template used to create revisions for this Service.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "KRM-style annotations for the resource.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "containerConcurrency": {
              "description": "Sets the maximum number of requests that each serving instance can receive.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            },
            "containers": {
              "description": "Holds the single container that defines the unit of execution for this Revision.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "image"
                ],
                "properties": {
                  "args": {
                    "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "command": {
                    "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "env": {
                    "description": "List of environment variables to set in the container.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Required. Name of the environment variable. Must be a C_IDENTIFIER, and mnay not exceed 32768 characters.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\", and the maximum length is 32768 bytes.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "valueSource": {
                          "description": "Source for the environment variable's value.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "secretKeyRef": {
                              "description": "Selects a secret and a specific version from Cloud Secret Manager.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "secretRef"
                              ],
                              "properties": {
                                "secretRef": {
                                  "type": "object",
                                  "properties": {
                                    "external": {
                                      "description": "Required. The name of the secret in Cloud Secret Manager. Format: {secret_name} if the secret is in the same project. projects/{project}/secrets/{secret_name} if the secret is in a different project.\n\nAllowed value: The Google Cloud resource name of a `SecretManagerSecret` resource (format: `projects/{{project}}/secrets/{{name}}`).",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "namespace": {
                                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "versionRef": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "external": {
                                      "description": "The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.\n\nAllowed value: The Google Cloud resource name of a `SecretManagerSecretVersion` resource (format: `{{name}}`).",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "namespace": {
                                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "image": {
                    "description": "Required. URL of the Container image in Google Container Registry or Docker More info: https://kubernetes.io/docs/concepts/containers/images",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the container specified as a DNS_LABEL.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "ports": {
                    "description": "List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible. If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "containerPort": {
                          "description": "Port number the container listens on. This must be a valid TCP port number, 0 < container_port < 65536.",
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int64"
                        },
                        "name": {
                          "description": "If specified, used to specify which protocol to use. Allowed values are \"http1\" and \"h2c\".",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  },
                  "resources": {
                    "description": "Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "cpuIdle": {
                        "description": "Determines whether CPU should be throttled or not outside of requests.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "limits": {
                        "description": "Only memory and CPU are supported. Note: The only supported values for CPU are '1', '2', and '4'. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
                        "type": [
                          "object",
                          "null"
                        ],
                        "additionalProperties": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  },
                  "volumeMounts": {
                    "description": "Volume to mount into the container's filesystem.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "mountPath": {
                          "description": "Required. Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be `/cloudsql`. All instances defined in the Volume will be available as `/cloudsql/[instance]`. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run",
                          "type": "string"
                        },
                        "name": {
                          "description": "Required. This must match the Name of a Volume.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "executionEnvironment": {
              "description": "The sandbox environment to host this Revision. Possible values: EXECUTION_ENVIRONMENT_UNSPECIFIED, EXECUTION_ENVIRONMENT_GEN1, EXECUTION_ENVIRONMENT_GEN2",
              "type": [
                "string",
                "null"
              ]
            },
            "labels": {
              "description": "KRM-style labels for the resource.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "revision": {
              "description": "The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.",
              "type": [
                "string",
                "null"
              ]
            },
            "scaling": {
              "description": "Scaling settings for this Revision.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "maxInstanceCount": {
                  "description": "Maximum number of serving instances that this resource should have.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int64"
                },
                "minInstanceCount": {
                  "description": "Minimum number of serving instances that this resource should have.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int64"
                }
              }
            },
            "serviceAccountRef": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "external": {
                  "description": "Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.\n\nAllowed value: The `email` field of an `IAMServiceAccount` resource.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "timeout": {
              "description": "Max allowed time for an instance to respond to a request.",
              "type": [
                "string",
                "null"
              ]
            },
            "volumes": {
              "description": "A list of Volumes to make available to containers.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "cloudSqlInstance": {
                    "description": "For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "instances": {
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "external": {
                              "description": "Allowed value: The `instanceName` field of a `SQLInstance` resource.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "name": {
                    "description": "Required. Volume's name.",
                    "type": "string"
                  },
                  "secret": {
                    "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "secretRef"
                    ],
                    "properties": {
                      "defaultMode": {
                        "description": "Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0644. Directories within the path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. This might be in conflict with other options that affect the file mode, like fsGroup, and as a result, other mode bits could be set.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int64"
                      },
                      "items": {
                        "description": "If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "path"
                          ],
                          "properties": {
                            "mode": {
                              "description": "Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int64"
                            },
                            "path": {
                              "description": "Required. The relative path of the secret in the container.",
                              "type": "string"
                            },
                            "versionRef": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "external": {
                                  "description": "The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.\n\nAllowed value: The Google Cloud resource name of a `SecretManagerSecretVersion` resource (format: `{{name}}`).",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "namespace": {
                                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "secretRef": {
                        "type": "object",
                        "properties": {
                          "external": {
                            "description": "Required. The name of the secret in Cloud Secret Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret} if the secret is in a different project.\n\nAllowed value: The Google Cloud resource name of a `SecretManagerSecret` resource (format: `projects/{{project}}/secrets/{{name}}`).",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "namespace": {
                            "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "vpcAccess": {
              "description": "VPC Access configuration to use for this Revision. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "connectorRef": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "external": {
                      "description": "VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}\n\nAllowed value: The Google Cloud resource name of a `VPCAccessConnector` resource (format: `projects/{{project}}/locations/{{location}}/connectors/{{name}}`).",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "namespace": {
                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "egress": {
                  "description": "Traffic VPC egress settings. Possible values: VPC_EGRESS_UNSPECIFIED, ALL_TRAFFIC, PRIVATE_RANGES_ONLY",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "traffic": {
          "description": "Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest `Ready` Revision.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "percent": {
                "description": "Specifies percent of the traffic to this Revision. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single TrafficTarget entry.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "revision": {
                "description": "Revision to which to send this portion of traffic, if traffic allocation is by revision.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tag": {
                "description": "Indicates a string to be part of the URI to exclusively reference this target.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "The allocation type for this traffic target. Possible values: TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED, TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST, TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        }
      }
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "creator": {
          "description": "Output only. Email address of the authenticated creator.",
          "type": [
            "string",
            "null"
          ]
        },
        "deleteTime": {
          "description": "Output only. The deletion time.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "etag": {
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "type": [
            "string",
            "null"
          ]
        },
        "expireTime": {
          "description": "Output only. For a deleted resource, the time after which it will be permamently deleted.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with 'run.googleapis.com' or 'serving.knative.dev' namespaces. Those labels are read-only, and user changes will not be preserved.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "lastModifier": {
          "description": "Output only. Email address of the last authenticated modifier.",
          "type": [
            "string",
            "null"
          ]
        },
        "latestCreatedRevision": {
          "description": "Output only. Name of the last created revision. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": [
            "string",
            "null"
          ]
        },
        "latestReadyRevision": {
          "description": "Output only. Name of the latest revision that is serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": [
            "string",
            "null"
          ]
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": [
            "integer",
            "null"
          ]
        },
        "reconciling": {
          "description": "Output only. Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process, `observed_generation`, `latest_ready_revison`, `traffic_statuses`, and `uri` will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `traffic` and `traffic_statuses`, `observed_generation` and `generation`, `latest_ready_revision` and `latest_created_revision`. If reconciliation failed, `traffic_statuses`, `observed_generation`, and `latest_ready_revision` will have the state of the last serving revision, or empty for newly created Services. Additional information on the failure can be found in `terminal_condition` and `conditions`.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "resourceGeneration": {
          "description": "Output only. A number that monotonically increases every time the user modifies the desired state.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "terminalCondition": {
          "description": "Output only. The Condition of this Service, containing its readiness status, and detailed error information in case it did not reach a serving state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "jobReason": {
              "description": "A reason for the job condition. Possible values: JOB_REASON_UNDEFINED, JOB_STATUS_SERVICE_POLLING_ERROR",
              "type": [
                "string",
                "null"
              ]
            },
            "lastTransitionTime": {
              "description": "Last time the condition transitioned from one status to another.",
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            },
            "message": {
              "description": "Human readable message indicating details about the current status.",
              "type": [
                "string",
                "null"
              ]
            },
            "reason": {
              "description": "A common (service-level) reason for this condition. Possible values: COMMON_REASON_UNDEFINED, UNKNOWN, REVISION_FAILED, PROGRESS_DEADLINE_EXCEEDED, CONTAINER_MISSING, CONTAINER_PERMISSION_DENIED, CONTAINER_IMAGE_UNAUTHORIZED, CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED, ENCRYPTION_KEY_PERMISSION_DENIED, ENCRYPTION_KEY_CHECK_FAILED, SECRETS_ACCESS_CHECK_FAILED, WAITING_FOR_OPERATION, IMMEDIATE_RETRY, POSTPONED_RETRY, INTERNAL",
              "type": [
                "string",
                "null"
              ]
            },
            "revisionReason": {
              "description": "A reason for the revision condition. Possible values: REVISION_REASON_UNDEFINED, PENDING, RESERVE, RETIRED, RETIRING, RECREATING, HEALTH_CHECK_CONTAINER_ERROR, CUSTOMIZED_PATH_RESPONSE_PENDING, MIN_INSTANCES_NOT_PROVISIONED, ACTIVE_REVISION_LIMIT_REACHED, NO_DEPLOYMENT",
              "type": [
                "string",
                "null"
              ]
            },
            "severity": {
              "description": "How to interpret failures of this condition, one of Error, Warning, Info Possible values: SEVERITY_UNSPECIFIED, ERROR, WARNING, INFO",
              "type": [
                "string",
                "null"
              ]
            },
            "state": {
              "description": "State of the condition. Possible values: STATE_UNSPECIFIED, CONDITION_PENDING, CONDITION_RECONCILING, CONDITION_FAILED, CONDITION_SUCCEEDED",
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready.",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "trafficStatuses": {
          "description": "Output only. Detailed status information for corresponding traffic targets. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "percent": {
                "description": "Specifies percent of the traffic to this Revision.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "revision": {
                "description": "Revision to which this traffic is sent.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tag": {
                "description": "Indicates the string used in the URI to exclusively reference this target.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "The allocation type for this traffic target. Possible values: TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED, TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST, TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION",
                "type": [
                  "string",
                  "null"
                ]
              },
              "uri": {
                "description": "Displays the target URI.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "uid": {
          "description": "Output only. Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.",
          "type": [
            "string",
            "null"
          ]
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "uri": {
          "description": "Output only. The main URI in which this Service is serving traffic.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "run.cnrm.cloud.google.com",
      "kind": "RunService",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}