{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "compute.cnrm.cloud.google.com/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ComputeSecurityPolicy"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "adaptiveProtectionConfig": {
          "description": "Adaptive Protection Config of this security policy.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "layer7DdosDefenseConfig": {
              "description": "Layer 7 DDoS Defense Config of this security policy.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "enable": {
                  "description": "If set to true, enables CAAP for L7 DDoS detection.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "ruleVisibility": {
                  "description": "Rule visibility. Supported values include: \"STANDARD\", \"PREMIUM\".",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "advancedOptionsConfig": {
          "description": "Advanced Options Config of this security policy.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "jsonParsing": {
              "description": "JSON body parsing. Supported values include: \"DISABLED\", \"STANDARD\".",
              "type": [
                "string",
                "null"
              ]
            },
            "logLevel": {
              "description": "Logging level. Supported values include: \"NORMAL\", \"VERBOSE\".",
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "description": {
          "description": "An optional description of this security policy. Max size is 2048.",
          "type": [
            "string",
            "null"
          ]
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": [
            "string",
            "null"
          ]
        },
        "rule": {
          "description": "The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match \"*\"). If no rules are provided when creating a security policy, a default rule with action \"allow\" will be added.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "action",
              "match",
              "priority"
            ],
            "properties": {
              "action": {
                "description": "Action to take when match matches the request.",
                "type": "string"
              },
              "description": {
                "description": "An optional description of this rule. Max size is 64.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "match": {
                "description": "A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding action is enforced.",
                "type": "object",
                "properties": {
                  "config": {
                    "description": "The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "srcIpRanges"
                    ],
                    "properties": {
                      "srcIpRanges": {
                        "description": "Set of IP addresses or ranges (IPV4 or IPV6) in CIDR notation to match against inbound traffic. There is a limit of 10 IP ranges per rule. A value of '*' matches all IPs (can be used to override the default behavior).",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  },
                  "expr": {
                    "description": "User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "expression"
                    ],
                    "properties": {
                      "expression": {
                        "description": "Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.",
                        "type": "string"
                      }
                    }
                  },
                  "versionedExpr": {
                    "description": "Predefined rule expression. If this field is specified, config must also be specified. Available options:   SRC_IPS_V1: Must specify the corresponding src_ip_ranges field in config.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "preview": {
                "description": "When set to true, the action specified above is not enforced. Stackdriver logs for requests that trigger a preview action are annotated as such.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "priority": {
                "description": "An unique positive integer indicating the priority of evaluation for a rule. Rules are evaluated from highest priority (lowest numerically) to lowest priority (highest numerically) in order.",
                "type": "integer"
              },
              "rateLimitOptions": {
                "description": "Rate limit threshold for this security policy. Must be specified if the action is \"rate_based_ban\" or \"throttle\". Cannot be specified for any other actions.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "conformAction",
                  "exceedAction",
                  "rateLimitThreshold"
                ],
                "properties": {
                  "banDurationSec": {
                    "description": "Can only be specified if the action for the rule is \"rate_based_ban\". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "banThreshold": {
                    "description": "Can only be specified if the action for the rule is \"rate_based_ban\". If specified, the key will be banned for the configured 'banDurationSec' when the number of requests that exceed the 'rateLimitThreshold' also exceed this 'banThreshold'.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "count",
                      "intervalSec"
                    ],
                    "properties": {
                      "count": {
                        "description": "Number of HTTP(S) requests for calculating the threshold.",
                        "type": "integer"
                      },
                      "intervalSec": {
                        "description": "Interval over which the threshold is computed.",
                        "type": "integer"
                      }
                    }
                  },
                  "conformAction": {
                    "description": "Action to take for requests that are under the configured rate limit threshold. Valid option is \"allow\" only.",
                    "type": "string"
                  },
                  "enforceOnKey": {
                    "description": "Determines the key to enforce the rateLimitThreshold on.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "enforceOnKeyName": {
                    "description": "Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "exceedAction": {
                    "description": "Action to take for requests that are above the configured rate limit threshold, to either deny with a specified HTTP response code, or redirect to a different endpoint. Valid options are \"deny()\" where valid values for status are 403, 404, 429, and 502, and \"redirect\" where the redirect parameters come from exceedRedirectOptions below.",
                    "type": "string"
                  },
                  "exceedRedirectOptions": {
                    "description": "Parameters defining the redirect action that is used as the exceed action. Cannot be specified if the exceed action is not redirect.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "target": {
                        "description": "Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "type": {
                        "description": "Type of the redirect action.",
                        "type": "string"
                      }
                    }
                  },
                  "rateLimitThreshold": {
                    "description": "Threshold at which to begin ratelimiting.",
                    "type": "object",
                    "required": [
                      "count",
                      "intervalSec"
                    ],
                    "properties": {
                      "count": {
                        "description": "Number of HTTP(S) requests for calculating the threshold.",
                        "type": "integer"
                      },
                      "intervalSec": {
                        "description": "Interval over which the threshold is computed.",
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "redirectOptions": {
                "description": "Parameters defining the redirect action. Cannot be specified for any other actions.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "type"
                ],
                "properties": {
                  "target": {
                    "description": "Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "type": {
                    "description": "Type of the redirect action. Available options: EXTERNAL_302: Must specify the corresponding target field in config. GOOGLE_RECAPTCHA: Cannot specify target field in config.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "type": {
          "description": "The type indicates the intended use of the security policy. CLOUD_ARMOR - Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google's cache.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "fingerprint": {
          "description": "Fingerprint of this resource.",
          "type": [
            "string",
            "null"
          ]
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": [
            "integer",
            "null"
          ]
        },
        "selfLink": {
          "description": "The URI of the created resource.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "compute.cnrm.cloud.google.com",
      "kind": "ComputeSecurityPolicy",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}